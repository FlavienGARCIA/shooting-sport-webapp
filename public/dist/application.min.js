"use strict";var ApplicationConfiguration=function(){var applicationModuleName="shooting-sport-targets",applicationModuleVendorDependencies=["ngResource","ui.router","ui.bootstrap","ui.utils","angularFileUpload","gridshore.c3js.chart","ui.select","nouislider","ngTable"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();
"use strict";angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0).hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])});
"use strict";ApplicationConfiguration.registerModule("articles");
"use strict";ApplicationConfiguration.registerModule("core");
"use strict";ApplicationConfiguration.registerModule("targets");
"use strict";ApplicationConfiguration.registerModule("users");
"use strict";angular.module("articles").run(["Menus",function(){}]);
"use strict";angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("articles",{"abstract":!0,url:"/articles",template:"<ui-view/>"}).state("articles.list",{url:"",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("articles.create",{url:"/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("articles.view",{url:"/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("articles.edit",{url:"/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]);
"use strict";angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]);
"use strict";angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("api/articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]);
"use strict";angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus",function($scope,$state,Authentication,Menus){$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]);
"use strict";angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]);
"use strict";angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?!0:options.isPublic,roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options.class,isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].roles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.link,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].items[itemIndex].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{isPublic:!1})}]);
"use strict";angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){Authentication.user?this.socket=io():$state.go("home"),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]);
"use strict";angular.module("targets").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Statistiques",state:"targets.stats"})}]);
"use strict";angular.module("targets").config(["$stateProvider",function($stateProvider){$stateProvider.state("targets",{"abstract":!0,url:"/targets",template:"<ui-view/>"}).state("targets.list",{url:"",templateUrl:"modules/targets/views/list-targets.client.view.html"}).state("targets.create",{url:"/create",templateUrl:"modules/targets/views/create-target.client.view.html"}).state("targets.edit",{url:"/:targetId/edit",templateUrl:"modules/targets/views/edit-target.client.view.html"}).state("targets.stats",{url:"/stats",templateUrl:"modules/targets/views/stats.client.view.html"})}]);
"use strict";angular.module("targets").controller("TargetCreateController",["$scope","$stateParams","$location","Authentication","Targets","FileUploader","$timeout","$window",function($scope,$stateParams,$location,Authentication,Targets,FileUploader,$timeout,$window){$scope.bullets=[],$scope.score=0,$scope.currentBulletScore=0,$scope.bulletScores=[],$scope.meanScore=0,$scope.maxScore=0,$scope.inBlack=0,$scope.bulletCount=0,$scope.imageURL="",$scope.croppedImageURL="",$scope.weapons=["CZ 75 SP-01 Shadow","Beretta 92S","Browning Buck Mark URX","Beretta 76"],$scope.calibers=["9x19mm",".22 LR"],$scope.ammos=["Sellier & Belliot","CCI Standard Velocity"],$scope.distances=["10m","25m"],$scope.imageParams={opacity:100,rotation:0,scale:100,x:0,y:0},$scope.cropContainer=$(".imageContainer > img"),$scope.cropData=null,$scope.initCropper=function(){$scope.cropContainer.cropper({aspectRatio:1,autoCropArea:1,minCropBoxHeight:1e3,minCropBoxWidth:1e3,dragCrop:!1,strict:!1,cropBoxMovable:!1,cropBoxResizable:!1,background:!1,modal:!1,crop:function(data){$scope.cropData=data}})},$(".rotate").on({slide:function(){$(".cropper-canvas > img").css({transform:"rotate("+$scope.imageParams.rotation+"deg)"})}}),$scope.cropEnabled=!0,$scope.disableCrop=function(){$scope.cropContainer.cropper("disable"),$scope.cropEnabled=!1},$scope.enableCrop=function(){$scope.cropContainer.cropper("enable"),$scope.cropEnabled=!0},$scope.getBulletPosition=function(event,container){var currentMousePos={x:-1,y:-1},parentOffset=container.offset();return currentMousePos.x=(event.pageX-parentOffset.left)/container.width()*100+"%",currentMousePos.y=(event.pageY-parentOffset.top)/container.width()*100+"%",currentMousePos},$scope.createBulletHole=function(event){var container=$(".target"),currentScore=angular.element(event.target).attr("data-score"),isInBlack=angular.element(event.target).hasClass("black"),bulletsContainer=$(".bullets"),position=$scope.getBulletPosition(event,container),bullet=$('<div class="bullet nine-mm"></div>').css({left:position.x,top:position.y}).attr("data-bullet-score",currentScore);bulletsContainer.prepend(bullet),$scope.bullets.push({x:position.x,y:position.y,score:currentScore}),$scope.updateData(currentScore,isInBlack)},$scope.updateData=function(currentScore,isInBlack){$scope.bulletCount++,isInBlack&&$scope.inBlack++,$scope.currentBulletScore=parseInt(currentScore),$scope.score+=$scope.currentBulletScore,$scope.bulletScores.push($scope.currentBulletScore),$scope.meanScore=+($scope.score/$scope.bulletCount).toFixed(2),$scope.maxScore=10*$scope.bulletCount},$scope.uploader=new FileUploader({url:"api/targets/picture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response){$scope.success=!0,$scope.imageURL=response.imageUrl,$scope.initCropper(),$scope.uploader.clearQueue()},$scope.uploader.onErrorItem=function(fileItem,response){$scope.uploader.clearQueue(),$scope.error=response.message},$scope.uploadTargetPicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=""},$scope.create=function(){var target=new Targets({score:$scope.score+"/"+$scope.maxScore,meanScore:$scope.meanScore,flooredMeanScore:Math.floor($scope.meanScore),bulletCount:$scope.bulletCount,bullets:$scope.bullets,inBlack:$scope.inBlack,inBlackPerc:+(100*$scope.inBlack/$scope.bulletCount).toFixed(1),dt:$scope.dt,distance:this.distance,weapon:this.weapon,caliber:this.caliber,ammo:this.ammo,imageURL:$scope.imageURL,cropData:{x:$scope.cropData.x,y:$scope.cropData.y,height:$scope.cropData.height,width:$scope.cropData.width,rotate:$scope.cropData.rotate}});target.$save(function(){$location.path("targets")},function(errorResponse){$scope.error=errorResponse.data.message})}}]);
"use strict";angular.module("targets").controller("TargetsStatsController",["$scope","Targets",function($scope,Targets){$scope.globalMeanScore=0,$scope.globalInBlackPerc=0,$scope.meanScorePoints=[],$scope.meanScoreColumns=[{id:"Score moyen",type:"area"}],$scope.inBlackPoints=[],$scope.inBlackColumns=[{id:"Pourcentage dans noir",type:"area"}],$scope.datax={id:"x"},$scope.targets=Targets.query(function(data){$scope.updateStats(data)}),$scope.updateStats=function(data){data.forEach(function(item){$scope.meanScorePoints.push({x:Date.parse(item.dt),"Score moyen":item.meanScore}),$scope.inBlackPoints.push({x:Date.parse(item.dt),"Pourcentage dans noir":item.inBlackPerc}),$scope.globalMeanScore+=item.meanScore,$scope.globalInBlackPerc+=item.inBlackPerc}),$scope.globalMeanScore=+($scope.globalMeanScore/data.length).toFixed(2),$scope.globalInBlackPerc=+($scope.globalInBlackPerc/data.length).toFixed(2)}}]);
"use strict";angular.module("targets").controller("TargetsController",["$scope","$stateParams","$location","Authentication","Targets","$modal","$log","ngTableParams","$filter",function($scope,$stateParams,$location,Authentication,Targets,$modal,$log,ngTableParams,$filter){$scope.authentication=Authentication,$scope.find=function(){$scope.targets=Targets.query(function(data){$scope.tableParams=new ngTableParams({page:1,count:10,sorting:{dt:"desc"}},{filterDelay:0,total:data.length,getData:function($defer,params){var searchStr=params.filter().search,mydata=[];searchStr?(searchStr=searchStr.toLowerCase(),mydata=data.filter(function(item){return item.user.displayName.toLowerCase().indexOf(searchStr)>-1})):mydata=data,mydata=params.sorting()?$filter("orderBy")(mydata,params.orderBy()):mydata,$defer.resolve(mydata.slice((params.page()-1)*params.count(),params.page()*params.count()))}})})},$scope.remove=function(target){if(target){target.$remove();for(var i in $scope.targets)$scope.targets[i]===target&&$scope.targets.splice(i,1)}else $scope.target.$remove(function(){$location.path("targets")})},$scope.update=function(){var target=$scope.target;target.$update(function(){$location.path("targets")},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.findOne=function(){$scope.target=Targets.get({targetId:$stateParams.targetId})}}]);
"use strict";angular.module("targets").factory("Targets",["$resource",function($resource){return $resource("api/targets/:targetId",{targetId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]);
"use strict";angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/views/settings/settings.client.view.html"}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]);
"use strict";angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]);
"use strict";angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]);
"use strict";angular.module("users").controller("ChangePasswordController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]);
"use strict";angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0}}]);
"use strict";angular.module("users").controller("SocialAccountsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/")}]);